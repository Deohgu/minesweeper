{"ast":null,"code":"var _jsxFileName = \"/Users/diogosantos/dev/minesweeper/client/src/utils/CellUtils/toDisplay.tsx\";\nimport React from \"react\";\nimport { IconsContainer } from \"./toDisplay.styled\";\nimport { Icons } from \"../../components/Cell/Cell.styled\";\nimport num1 from \"../../assets/1.png\";\nimport num2 from \"../../assets/2.png\";\nimport num3 from \"../../assets/3.png\";\nimport num4 from \"../../assets/4.png\";\nimport num5 from \"../../assets/5.png\";\nimport num6 from \"../../assets/6.png\";\nimport num7 from \"../../assets/7.png\";\nimport num8 from \"../../assets/8.png\";\nimport bomb from \"../../assets/bomb.png\";\nimport flag from \"../../assets/flag.png\";\nimport wrong_flag from \"../../assets/wrong_flag.png\";\n\n// Allows refering in the Icons src with a \"variable\" variable bellow -> `num${value}`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst importedImg = {\n  num1,\n  num2,\n  num3,\n  num4,\n  num5,\n  num6,\n  num7,\n  num8\n};\nexport const toDisplay = cell => {\n  const {\n    value\n  } = cell;\n  if (cell.advancedChecked === true) {\n    if (cell.value === \"bombPressed\") {\n      return /*#__PURE__*/_jsxDEV(IconsContainer, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Icons, {\n          src: bomb,\n          alt: value === null || value === void 0 ? void 0 : value.toString(),\n          draggable: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    } else if (cell.value === \"bomb\") {\n      return /*#__PURE__*/_jsxDEV(Icons, {\n        src: bomb,\n        alt: value === null || value === void 0 ? void 0 : value.toString(),\n        draggable: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else {\n      var _cell$value;\n      return /*#__PURE__*/_jsxDEV(Icons, {\n        src: importedImg[`num${(_cell$value = cell.value) === null || _cell$value === void 0 ? void 0 : _cell$value.toString()}`],\n        alt: value === null || value === void 0 ? void 0 : value.toString(),\n        draggable: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  } else if (cell.flagged === \"wrong\") {\n    return /*#__PURE__*/_jsxDEV(Icons, {\n      src: wrong_flag,\n      alt: \"wrong\",\n      draggable: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  } else if (cell.flagged === true) {\n    return /*#__PURE__*/_jsxDEV(Icons, {\n      src: flag,\n      alt: \"flag\",\n      draggable: \"false\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n};","map":{"version":3,"names":["React","IconsContainer","Icons","num1","num2","num3","num4","num5","num6","num7","num8","bomb","flag","wrong_flag","jsxDEV","_jsxDEV","importedImg","toDisplay","cell","value","advancedChecked","children","src","alt","toString","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_cell$value","flagged"],"sources":["/Users/diogosantos/dev/minesweeper/client/src/utils/CellUtils/toDisplay.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { CellType } from \"../../store/settingsSlice\";\n\nimport { IconsContainer } from \"./toDisplay.styled\";\nimport { Icons } from \"../../components/Cell/Cell.styled\";\n\nimport num1 from \"../../assets/1.png\";\nimport num2 from \"../../assets/2.png\";\nimport num3 from \"../../assets/3.png\";\nimport num4 from \"../../assets/4.png\";\nimport num5 from \"../../assets/5.png\";\nimport num6 from \"../../assets/6.png\";\nimport num7 from \"../../assets/7.png\";\nimport num8 from \"../../assets/8.png\";\nimport bomb from \"../../assets/bomb.png\";\nimport flag from \"../../assets/flag.png\";\nimport wrong_flag from \"../../assets/wrong_flag.png\";\n\n// Allows refering in the Icons src with a \"variable\" variable bellow -> `num${value}`\nconst importedImg: { [key: string]: string } = {\n  num1,\n  num2,\n  num3,\n  num4,\n  num5,\n  num6,\n  num7,\n  num8,\n};\n\nexport const toDisplay = (\n  cell: CellType\n  // cellArray: initialStateTypes[\"cellArray\"],\n  // index: number,\n  // value: cellType[\"value\"]\n): JSX.Element | undefined => {\n  const { value } = cell;\n\n  if (cell.advancedChecked === true) {\n    if (cell.value === \"bombPressed\") {\n      return (\n        <IconsContainer>\n          {\" \"}\n          <Icons src={bomb} alt={value?.toString()} draggable=\"false\" />\n        </IconsContainer>\n      );\n    } else if (cell.value === \"bomb\") {\n      return <Icons src={bomb} alt={value?.toString()} draggable=\"false\" />;\n    } else {\n      return (\n        <Icons\n          src={importedImg[`num${cell.value?.toString()}`]}\n          alt={value?.toString()}\n          draggable=\"false\"\n        />\n      );\n    }\n  } else if (cell.flagged === \"wrong\") {\n    return <Icons src={wrong_flag} alt={\"wrong\"} draggable=\"false\" />;\n  } else if (cell.flagged === true) {\n    return <Icons src={flag} alt={\"flag\"} draggable=\"false\" />;\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,KAAK,QAAQ,mCAAmC;AAEzD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,UAAU,MAAM,6BAA6B;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAsC,GAAG;EAC7Cb,IAAI;EACJC,IAAI;EACJC,IAAI;EACJC,IAAI;EACJC,IAAI;EACJC,IAAI;EACJC,IAAI;EACJC;AACF,CAAC;AAED,OAAO,MAAMO,SAAS,GACpBC,IAAc,IAIc;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGD,IAAI;EAEtB,IAAIA,IAAI,CAACE,eAAe,KAAK,IAAI,EAAE;IACjC,IAAIF,IAAI,CAACC,KAAK,KAAK,aAAa,EAAE;MAChC,oBACEJ,OAAA,CAACd,cAAc;QAAAoB,QAAA,GACZ,GAAG,eACJN,OAAA,CAACb,KAAK;UAACoB,GAAG,EAAEX,IAAK;UAACY,GAAG,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,QAAQ,EAAG;UAACC,SAAS,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/C;IAErB,CAAC,MAAM,IAAIX,IAAI,CAACC,KAAK,KAAK,MAAM,EAAE;MAChC,oBAAOJ,OAAA,CAACb,KAAK;QAACoB,GAAG,EAAEX,IAAK;QAACY,GAAG,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,QAAQ,EAAG;QAACC,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IACvE,CAAC,MAAM;MAAA,IAAAC,WAAA;MACL,oBACEf,OAAA,CAACb,KAAK;QACJoB,GAAG,EAAEN,WAAW,CAAE,MAAG,CAAAc,WAAA,GAAEZ,IAAI,CAACC,KAAK,cAAAW,WAAA,uBAAVA,WAAA,CAAYN,QAAQ,EAAG,EAAC,CAAE;QACjDD,GAAG,EAAEJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,QAAQ,EAAG;QACvBC,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjB;IAEN;EACF,CAAC,MAAM,IAAIX,IAAI,CAACa,OAAO,KAAK,OAAO,EAAE;IACnC,oBAAOhB,OAAA,CAACb,KAAK;MAACoB,GAAG,EAAET,UAAW;MAACU,GAAG,EAAE,OAAQ;MAACE,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACnE,CAAC,MAAM,IAAIX,IAAI,CAACa,OAAO,KAAK,IAAI,EAAE;IAChC,oBAAOhB,OAAA,CAACb,KAAK;MAACoB,GAAG,EAAEV,IAAK;MAACW,GAAG,EAAE,MAAO;MAACE,SAAS,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC5D;AACF,CAAC"},"metadata":{},"sourceType":"module"}