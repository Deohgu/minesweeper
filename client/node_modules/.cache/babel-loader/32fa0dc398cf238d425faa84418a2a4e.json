{"ast":null,"code":"import React from\"react\";import{IconsContainer}from\"./toDisplay.styled\";import{Icons}from\"../../components/Cell/Cell.styled\";import num1 from\"../../assets/1.png\";import num2 from\"../../assets/2.png\";import num3 from\"../../assets/3.png\";import num4 from\"../../assets/4.png\";import num5 from\"../../assets/5.png\";import num6 from\"../../assets/6.png\";import num7 from\"../../assets/7.png\";import num8 from\"../../assets/8.png\";import bomb from\"../../assets/bomb.png\";import flag from\"../../assets/flag.png\";import wrong_flag from\"../../assets/wrong_flag.png\";// Allows refering in the Icons src with a \"variable\" variable bellow -> `num${value}`\nvar importedImg={num1:num1,num2:num2,num3:num3,num4:num4,num5:num5,num6:num6,num7:num7,num8:num8};export var toDisplay=function toDisplay(cell){var value=cell.value;if(cell.advancedChecked===true){if(cell.value===\"bombPressed\"){return/*#__PURE__*/React.createElement(IconsContainer,null,\" \",/*#__PURE__*/React.createElement(Icons,{src:bomb,alt:value===null||value===void 0?void 0:value.toString(),draggable:\"false\"}));}else if(cell.value===\"bomb\"){return/*#__PURE__*/React.createElement(Icons,{src:bomb,alt:value===null||value===void 0?void 0:value.toString(),draggable:\"false\"});}else{var _cell$value;return/*#__PURE__*/React.createElement(Icons,{src:importedImg[\"num\".concat((_cell$value=cell.value)===null||_cell$value===void 0?void 0:_cell$value.toString())],alt:value===null||value===void 0?void 0:value.toString(),draggable:\"false\"});}}else if(cell.flagged===\"wrong\"){return/*#__PURE__*/React.createElement(Icons,{src:wrong_flag,alt:\"wrong\",draggable:\"false\"});}else if(cell.flagged===true){return/*#__PURE__*/React.createElement(Icons,{src:flag,alt:\"flag\",draggable:\"false\"});}};","map":{"version":3,"sources":["/Users/diogosantos/dev/minesweeper/src/utils/CellUtils/toDisplay.tsx"],"names":["React","IconsContainer","Icons","num1","num2","num3","num4","num5","num6","num7","num8","bomb","flag","wrong_flag","importedImg","toDisplay","cell","value","advancedChecked","toString","flagged"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAIA,OAASC,cAAT,KAA+B,oBAA/B,CACA,OAASC,KAAT,KAAsB,mCAAtB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CAEA;AACA,GAAMC,CAAAA,WAAsC,CAAG,CAC7CX,IAAI,CAAJA,IAD6C,CAE7CC,IAAI,CAAJA,IAF6C,CAG7CC,IAAI,CAAJA,IAH6C,CAI7CC,IAAI,CAAJA,IAJ6C,CAK7CC,IAAI,CAAJA,IAL6C,CAM7CC,IAAI,CAAJA,IAN6C,CAO7CC,IAAI,CAAJA,IAP6C,CAQ7CC,IAAI,CAAJA,IAR6C,CAA/C,CAWA,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CACvBC,IADuB,CAKK,IACpBC,CAAAA,KADoB,CACVD,IADU,CACpBC,KADoB,CAG5B,GAAID,IAAI,CAACE,eAAL,GAAyB,IAA7B,CAAmC,CACjC,GAAIF,IAAI,CAACC,KAAL,GAAe,aAAnB,CAAkC,CAChC,mBACE,oBAAC,cAAD,MACG,GADH,cAEE,oBAAC,KAAD,EAAO,GAAG,CAAEN,IAAZ,CAAkB,GAAG,CAAEM,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEE,QAAP,EAAvB,CAA0C,SAAS,CAAC,OAApD,EAFF,CADF,CAMD,CAPD,IAOO,IAAIH,IAAI,CAACC,KAAL,GAAe,MAAnB,CAA2B,CAChC,mBAAO,oBAAC,KAAD,EAAO,GAAG,CAAEN,IAAZ,CAAkB,GAAG,CAAEM,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEE,QAAP,EAAvB,CAA0C,SAAS,CAAC,OAApD,EAAP,CACD,CAFM,IAEA,iBACL,mBACE,oBAAC,KAAD,EACE,GAAG,CAAEL,WAAW,2BAAOE,IAAI,CAACC,KAAZ,sCAAO,YAAYE,QAAZ,EAAP,EADlB,CAEE,GAAG,CAAEF,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEE,QAAP,EAFP,CAGE,SAAS,CAAC,OAHZ,EADF,CAOD,CACF,CAnBD,IAmBO,IAAIH,IAAI,CAACI,OAAL,GAAiB,OAArB,CAA8B,CACnC,mBAAO,oBAAC,KAAD,EAAO,GAAG,CAAEP,UAAZ,CAAwB,GAAG,CAAE,OAA7B,CAAsC,SAAS,CAAC,OAAhD,EAAP,CACD,CAFM,IAEA,IAAIG,IAAI,CAACI,OAAL,GAAiB,IAArB,CAA2B,CAChC,mBAAO,oBAAC,KAAD,EAAO,GAAG,CAAER,IAAZ,CAAkB,GAAG,CAAE,MAAvB,CAA+B,SAAS,CAAC,OAAzC,EAAP,CACD,CACF,CAhCM","sourcesContent":["import React from \"react\";\n\nimport { CellType } from \"../../store/settingsSlice\";\n\nimport { IconsContainer } from \"./toDisplay.styled\";\nimport { Icons } from \"../../components/Cell/Cell.styled\";\n\nimport num1 from \"../../assets/1.png\";\nimport num2 from \"../../assets/2.png\";\nimport num3 from \"../../assets/3.png\";\nimport num4 from \"../../assets/4.png\";\nimport num5 from \"../../assets/5.png\";\nimport num6 from \"../../assets/6.png\";\nimport num7 from \"../../assets/7.png\";\nimport num8 from \"../../assets/8.png\";\nimport bomb from \"../../assets/bomb.png\";\nimport flag from \"../../assets/flag.png\";\nimport wrong_flag from \"../../assets/wrong_flag.png\";\n\n// Allows refering in the Icons src with a \"variable\" variable bellow -> `num${value}`\nconst importedImg: { [key: string]: string } = {\n  num1,\n  num2,\n  num3,\n  num4,\n  num5,\n  num6,\n  num7,\n  num8,\n};\n\nexport const toDisplay = (\n  cell: CellType\n  // cellArray: initialStateTypes[\"cellArray\"],\n  // index: number,\n  // value: cellType[\"value\"]\n): JSX.Element | undefined => {\n  const { value } = cell;\n\n  if (cell.advancedChecked === true) {\n    if (cell.value === \"bombPressed\") {\n      return (\n        <IconsContainer>\n          {\" \"}\n          <Icons src={bomb} alt={value?.toString()} draggable=\"false\" />\n        </IconsContainer>\n      );\n    } else if (cell.value === \"bomb\") {\n      return <Icons src={bomb} alt={value?.toString()} draggable=\"false\" />;\n    } else {\n      return (\n        <Icons\n          src={importedImg[`num${cell.value?.toString()}`]}\n          alt={value?.toString()}\n          draggable=\"false\"\n        />\n      );\n    }\n  } else if (cell.flagged === \"wrong\") {\n    return <Icons src={wrong_flag} alt={\"wrong\"} draggable=\"false\" />;\n  } else if (cell.flagged === true) {\n    return <Icons src={flag} alt={\"flag\"} draggable=\"false\" />;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}